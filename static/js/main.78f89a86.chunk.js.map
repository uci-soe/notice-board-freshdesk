{"version":3,"sources":["docs/layout/Nav.js","docs/layout/Footer.js","components/NoticeboardItem.js","components/Noticeboard.js","test-data/mock-tickets.js","docs/components/Auth.js","docs/Home.js","docs/layout/Content.js","docs/layout/DocumentComponent.js","docs/components/NoticeboardDocs.js","docs/Documentation.js","docs/index.js","index.js"],"names":["LayoutNav","props","toggle","bind","state","isOpen","this","setState","title","gh","color","light","toggleable","right","onClick","tag","Link","to","navbar","className","href","React","Component","Footer","split","user","repo","fluid","src","frameBorder","scrolling","width","height","NoticeboardItem","tags","UTCDate","desp_text","ticket","key","id","priority","displayPriority","xs","subject","description_text","length","substring","requester","name","created_at","moment","format","style","padding","map","status","status_text","displayStatus","instance","TicketsNoTickets","buildQuery","opts","q","order_by","order_type","displayResolved","updated_since","limit","page","Noticeboard","children","auth","subdomain","noTickets","useState","response","setResponse","useEffect","update","updateFunc","axios","get","params","include","paramsSerializer","qs","stringify","arrayFormat","encoder","str","trim","replace","then","data","catch","err","console","error","stack","fetchResponse","resp","slice","setTimeout","clearTimeout","fsItem","NoTickets","createContext","reset","authenticate","Mock","_axios","_mock","MockAxios","mock","log","onAny","passThrough","onGet","reply","tickets","Auth","setSubdomain","email","setEmail","password","setPassword","useContext","MockTickets","onSubmit","func","e","preventDefault","fontSize","inline","for","type","placeholder","value","onChange","target","example","dedent","Home","sm","size","offset","outline","marginBottom","Content","DocumentProptypes","component","proptypes","DocumentExamples","demo","source","DocumentComponent","components","examples","i","push","CustomNoTickets","border","Documentation","NoticeboardDocs","mockCtrl","basename","process","Docs","username","Provider","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.78f89a86.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\nclass LayoutNav extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    const { title, gh } = this.props;\n\n    return (\n      <Navbar color=\"faded\" light toggleable=\"md\">\n        <NavbarToggler right onClick={this.toggle} />\n        <NavbarBrand tag={Link} to=\"/\">{title}</NavbarBrand>\n        <Collapse navbar isOpen={this.state.isOpen}>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} to=\"/documentation\">Documentation</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href={`https://github.com/${gh}`}>Github</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default LayoutNav;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst Footer = ({gh}) => {\n  const [user, repo] = gh.split('/');\n  return (\n    <div className=\"footer mt-1\">\n      <Container fluid>\n        <Row>\n          <Col className=\"text-center\">\n            <p className=\"social\">\n              <iframe src={`https://ghbtns.com/github-btn.html?user=${user}&repo=${repo}&type=star&count=true`} frameBorder=\"0\" scrolling=\"0\" width=\"100\" height=\"20px\" />\n              <iframe src={`https://ghbtns.com/github-btn.html?user=${user}&repo=${repo}&type=fork&count=true`} frameBorder=\"0\" scrolling=\"0\" width=\"100\" height=\"20px\" />\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport {\n    Row, Col,\n    ListGroupItem\n} from 'reactstrap';\nimport './NoticeboardItem.css';\nimport moment from 'moment';\n\nexport default function NoticeboardItem ({ticket}) {\n\n    const parseDates = (UTCDate) => {\n        let m = moment(UTCDate).format('llll')\n        return m;\n    }\n\n    const displayContent = (desp_text) => {\n        if (desp_text.length <= 250) {\n            return desp_text;\n        } else {\n            return desp_text.substring(0, 250) + \"...\";\n        }\n    }\n\n    const displayTags = (tags) => {\n        if (tags.length === 0) {\n            return (\n                <div className=\"fr-empty\"></div>\n            )\n        } else {\n            return (\n                tags.map(name => <div className=\"fr-tag\">{name}</div>)\n            );\n        }\n    }\n\n    const displayStatus = (status) => {\n        let status_text = \"\";\n        switch(status) {\n            case 2:\n                status_text = \"OPEN\";\n                break;\n            case 3:\n                status_text = \"PENDING\";\n                break;\n            case 4:\n                status_text = \"RESOLVED\";\n                break;\n            case 5:\n                status_text = \"CLOSED\";\n                break;\n            default:\n                status_text = \"None\";\n        }\n        return (<div className=\"fr-ticket-property\">{status_text}</div>);\n    }\n\n    const displayPriority = (priority) => {\n        switch(priority) {\n            case 2:\n                return (\n                  <div className=\"fr-priority medium\"></div>\n                );\n            case 3:\n                return (\n                  <div className=\"fr-priority high\"></div>\n                );\n            default:\n                return (\n                  <div className=\"fr-priority low\"></div>\n                );\n        }\n    }\n\n    return (\n        <ListGroupItem className=\"freshdesk-list fr-ticket-item\" key={ticket.id}>\n            {displayPriority(ticket.priority)}\n            <Row>\n                <Col xs=\"8\">\n                    <div className=\"fr-title\">{ticket.subject}</div>\n                    <div className=\"fr-description\">{displayContent(ticket.description_text)}</div>\n                </Col>\n                <Col xs=\"4\">\n                    <Row>\n                        <Col xs=\"12\"><div className=\"fr-requester\">{ticket.requester.name}</div></Col>\n                    </Row>\n                    <Row>\n                        <Col xs=\"12\"><div className=\"fr-date\">{parseDates(ticket.created_at)}</div></Col>\n                    </Row>\n                    <Row style={{padding: \"0.5rem 0 0.3rem 0\"}}>\n                        <Col xs=\"4\">\n                            Tags:\n                        </Col>\n                        <Col xs=\"8\" className=\"fr-tags\">\n                            {displayTags(ticket.tags)}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs=\"4\">\n                            Status:\n                        </Col>\n                        <Col xs=\"8\">\n                            {displayStatus(ticket.status)}\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </ListGroupItem>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  Container,\n  ListGroup\n} from 'reactstrap';\nimport './Noticeboard.css';\nimport qs from 'qs';\nimport NoticeboardItem from './NoticeboardItem';\n\nconst TicketsNoTickets = () => {\n  return (<div className=\"no-tickets\" />);\n}\n\nconst ONE_MINUTE = 1000 * 60;\n\nconst buildQuery = (opts) => {\n  let q = {};\n  if (opts.order_by) {\n    q['order_by'] = opts.order_by;\n  }\n  if (opts.order_type) {\n    q['order_type'] = opts.order_type;\n  }\n  if (!opts.displayResolved) {\n    q['filter'] = \"new_and_my_open\";\n  }\n  if (opts.updated_since) {\n    q['updated_since'] = opts.updated_since;\n  }\n  if (opts.limit >= 0) {\n    q['per_page'] = '' + opts.limit;\n  }\n  if (opts.page > 1) {\n    q['page'] = '' + opts.page;\n  }\n\n  return q;\n};\n\nconst fetchResponse = (subdomain, auth, opts) => {\n  return axios.get(`https://${subdomain}.freshdesk.com/api/v2/tickets`, {\n    auth: auth,\n    params: {\n      include: 'requester,description',\n      ...buildQuery(opts)\n    },\n    paramsSerializer: function (params) {\n      return qs.stringify(params, {\n        arrayFormat: 'brackets', encoder: function (str) {\n          // Passed in values `a`, `b`, `c`\n          return typeof str === 'string' ? str.trim().replace(/\\s+/g, '%20') : str;\n        }\n      })\n    },\n  }).then(response => response.data)\n    .catch(err => {\n      console.error(err.stack);\n      return [];\n    });\n};\n\nconst Noticeboard = (\n  {\n    children,\n    auth = {},\n    subdomain = '',\n    displayResolved = true,\n    updated_since = \"1970-01-01\",\n    limit = -1,\n    page = 0,\n    order_by = \"created_at\",\n    order_type = \"desc\",\n    noTickets\n  }\n) => {\n\n  const [response, setResponse] = useState([]);\n\n  useEffect(() => {\n    let update;\n    const updateFunc = () => {\n      fetchResponse(subdomain, auth, {order_by, order_type, displayResolved, updated_since, limit, page})\n        .then(resp => limit >= 0 ? resp.slice(0, limit) : resp)\n        .then(resp => setResponse(resp))\n      ;\n      update = setTimeout(() => {\n        updateFunc();\n      }, 5 * ONE_MINUTE);\n    };\n\n    updateFunc();\n\n    return () => {\n      clearTimeout(update);\n    }\n    // fetchResponse(subdomain, auth, {order_by, order_type, updated_since, displayResolved, limit, page})\n    //   .then(resp => setResponse(resp))\n    // ;\n\n  }, [subdomain, auth, order_by, order_type, displayResolved, updated_since, limit, page]);\n\n  const fsItem = children || NoticeboardItem;\n  const NoTickets = noTickets || TicketsNoTickets;\n  // console.log(fsItem);\n  return (\n      <ListGroup className=\"tickets\">\n        {response.length\n          ? response.map((ticket) => fsItem({ticket, key: ticket.id}))\n          : NoTickets()}\n      </ListGroup>\n  );\n}\n\nexport default Noticeboard;\n","import React from 'react';\nimport tickets from './tickets-stub';\nimport ticketids from './ticket-stub';\nimport MockAxios from 'axios-mock-adapter';\n\nexport default React.createContext(\n{\n  auth: {},\n  subdomain: '',\n  reset: () => {},\n  authenticate: () => {}\n});\n\nclass Mock {\n  constructor(axios) {\n    this._axios = axios;\n    this._mock = new MockAxios(this._axios);\n\n    this.mock();\n  }\n\n  reset() {\n    console.log(\"mock is restored\")\n    this._mock.reset();\n    this._mock.onAny().passThrough();\n  }\n\n  mock() {\n    console.log(\"mock is called\");\n    this._mock.reset();\n    this._mock.onGet(/api\\/v2\\/tickets\\/?/i).reply(200, tickets);\n  }\n}\n\nlet instance;\n// to simulate calling axios get using locally-stored tickets\nexport const initMock = (axios) => {\n  return instance || (instance = new Mock(axios));\n};\n","import React, {useState, useContext} from 'react';\nimport {  Button,\n  Input,\n  Form, FormGroup, Label\n} from 'reactstrap';\nimport MockTickets from '../../test-data/mock-tickets';\n\nconst Auth = () => {\n  const [subdomain, setSubdomain] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const {reset, authenticate} = useContext(MockTickets);\n\n  const paraStyle = {\n    color: '#34495e',\n    fontSize: 14\n  }\n\n  const onSubmit = (func) => {\n    return (e) => {\n      e.preventDefault();\n      func(e);\n    }\n  }\n\n  return (\n    <div>\n      <p style={paraStyle}>NOTE: This site presents a mockup of Freshdesk API calls due to confidentiality reasons.\n        If you have a valid Freshdesk credential and would like to see the real Freshdesk calls,\n        please login using your username and password.\n      </p>\n      <Form inline>\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n          <Label for=\"subdomain\" className=\"mr-sm-2\">Subdomain:</Label>\n          <Input type=\"text\" name=\"subdomain\" id=\"subdomain\" placeholder=\"<subdomain>.freshdesk.com\" \n            value={subdomain} onChange={e => setSubdomain(e.target.value)}/>\n        </FormGroup>\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n          <Label for=\"exampleEmail\" className=\"mr-sm-2\">Email:</Label>\n          <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"Freshdesk Username\" \n            value={email} onChange={e => setEmail(e.target.value)}/>\n        </FormGroup>\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n          <Label for=\"examplePassword\" className=\"mr-sm-2\">Password:</Label>\n          <Input type=\"text\" name=\"password\" id=\"examplePassword\" placeholder=\"Freshdesk Password\" \n            value={password} onChange={e => setPassword(e.target.value)}/>\n        </FormGroup>\n        <Button type=\"submit\" color=\"danger\" \n          onClick={onSubmit(() => authenticate(email, password, subdomain))}\n          >Submit</Button>\n        <Button color=\"primary\" onClick={onSubmit(reset)}>Reset</Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default Auth;","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PrismCode } from 'react-prism';\nimport { dedent } from 'dentist';\nimport {\n  Jumbotron,\n  Button,\n  Container,\n  Col,\n  Row\n} from 'reactstrap';\nimport { Noticeboard } from '../components';\nimport Auth from './components/Auth';\nimport MockTickets from '../test-data/mock-tickets';\n\n// import { freshdesk } from '../../.credentials.json'\n\nconst example = dedent(`\n  import React from 'react';\n  import { Noticeboard } from 'uci-soe/notice-board-freshdesk';\n\n  const Example = () => {\n    return (\n        <Noticeboard subdomain=\"ucieducation\" auth={freshdesk} limit={2} />\n    );\n  };\n\n  export default Example;\n`);\n\n\nconst Home = ({title, gh}) => {\n  const { subdomain, auth } = useContext(MockTickets);\n\n  return (\n    <div>\n      <Jumbotron tag=\"section\" className=\"jumbotron-header text-center my-5\">\n        <Container fluid>\n          <Row>\n            <Col sm={{ size: 10, offset: 1}}>\n              <h1 className=\"display-4\">{title}</h1>\n              <p className=\"lead my-3\">\n                A component built, documented & published with <a href=\"https://github.com/reactstrap/component-template\">Component Template </a>\n                that displays technical tasks assigned to the Technical Support Team at UCI School of Education.\n              </p>\n              <p>\n                <Button outline color=\"danger\" href={`https://github.com/${gh}`}>View on Github</Button>\n                <Button tag={Link} color=\"danger\" to=\"/documentation\">Documentation</Button>\n              </p>\n            </Col>\n          </Row>\n        </Container>\n      </Jumbotron>\n      <Container fluid>\n        <Row style={{marginBottom: 70}}>\n          <Col sm={{ size: 8, offset: 2 }}>\n            <Auth />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={{ size: 8, offset: 2 }}>\n            <h2>Getting Started</h2>\n            <hr/>\n            <p>\n              Install and save the component to your project\n            </p>\n            <pre>\n              <PrismCode className=\"language-bash\">\n                npm install uci-soe/notice-board-freshdesk --save\n              </PrismCode>\n            </pre>\n            <p>\n              ES6 - import the component you need\n            </p>\n            <div className=\"docs-example-custom\">\n                <Noticeboard subdomain={subdomain} auth={auth} limit={2} updated_since=\"2010-01-01\"/>\n            </div>\n            <pre>\n              <PrismCode className=\"language-jsx\">\n                {example}\n              </PrismCode>\n            </pre>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst Content = (props) => {\n  return (\n    <Container className=\"mt-3\" fluid>\n      <Row>\n        <Col sm={{ size: 8, offset: 2 }}>\n          {props.children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Content;\n","import React, {useContext} from 'react';\nimport { PrismCode } from 'react-prism';\nimport { dedent } from 'dentist';\nimport MockTickets from '../../test-data/mock-tickets';\n\nconst DocumentProptypes = (props) => {\n  const {\n    name,\n    proptypes\n  } = props.component;\n  return (\n    <div className=\"docs-component-props mt-5\">\n      <h3>{name} - PropTypes</h3>\n      <pre>\n        <PrismCode className=\"language-jsx\">\n          {`${name}.propTypes = ${dedent(proptypes)}`}\n        </PrismCode>\n      </pre>\n    </div>\n  );\n};\n\nconst DocumentExamples = (props) => {\n  const {\n    name,\n    demo,\n    source,\n  } = props.component;\n\n  const {subdomain, auth} = useContext(MockTickets);\n  return (\n    <div className=\"docs-component-props mt-5\">\n      <h3>{name}</h3>\n      { demo && (\n        <div className=\"docs-example-custom\">\n          {demo(subdomain, auth)}\n        </div>\n      )}\n      { source && (\n        <pre>\n          <PrismCode className=\"language-jsx\">\n            {dedent(source)}\n          </PrismCode>\n        </pre>\n      )}\n    </div>\n  );\n};\n\nconst DocumentComponent = (props) => {\n  const {\n    name,\n    children,\n    components = [],\n    examples = [],\n   } = props;\n  return (\n    <div className=\"docs-component-section\">\n      <h1>{name}</h1>\n      {children}\n      { components.map((component,i) => <DocumentProptypes key={i} component={component} />)}\n      { examples.map((example,i) => <DocumentExamples key={i} component={example} />)}\n    </div>\n  );\n};\n\nexport default DocumentComponent;\n","import React from 'react';\nimport DocumentComponent from '../layout/DocumentComponent';\nimport { Noticeboard } from '../../components';\n// import { freshdesk } from '../../../.credentials.json';\n\nconst components = [];\n// Add your component proptype data here\n// multiple component proptype documentation supported\ncomponents.push({\n  name: 'Noticeboard',\n  proptypes: `\n{\n    auth: PropTypes.dict, // {username: \"XXX\", password: \"X\"}\n    subdomain: PropTypes.string, // ucieducation\n    limit: PropTypes.int, // default -1 => display all; otherwise any non-negative integer\n    page: PropTypes.int, // default 0 => one page; otherwise any non-neg integer\n    order_by: PropTypes.string, // created_at, due_by, updated_at, status\n    order_type: PropTypes.string, // asc, desc\n    displayResolved: PropTypes.bool, // default true => display resolved tickets; otherwise false => only open tickets\n    updated_since: PropTypes.string, // \"20019-01-13\", \"2019-01-15\"\n    noTickets: PropTypes.func // display a custom component when there are no tickets\n}\n  `\n});\n\nconst examples = [];\n// Add your component example data here\n// multiple examples supported\nexamples.push({\n  name: 'Noticeboard - Standard',\n  demo: (subdomain, auth) => {\n    return (\n      <Noticeboard subdomain={subdomain} auth={auth} limit={1} />\n    );\n  },\n  source: `\n    <Noticeboard subdomain=\"...\" auth={...} limit={1} />\n  `\n});\n\nexamples.push({\n    name: 'Noticeboard - Customization: order_by, order_type',\n    demo: (subdomain, auth) => {\n      return (\n        <Noticeboard subdomain={subdomain} auth={auth} limit={2} order_by=\"updated_at\" order_type=\"asc\" />\n      )\n    },\n    source: `\n        <Noticeboard subdomain=\"...\" auth={...} limit={2} order_by=\"updated_at\" order_type=\"asc\" />\n    `\n});\n\nexamples.push({\n    name: 'Noticeboard - Custom Ticket Component',\n    demo: (subdomain, auth) => {\n      return (\n        <Noticeboard subdomain={subdomain} auth={auth} limit={10}>\n            {({ticket}) => (<div key={ticket.id}>{ticket.id}</div>)}\n        </Noticeboard>\n      );\n    },\n    source: `\n    <Noticeboard subdomain=\"...\" auth={...} limit={10}>\n        {(ticket) => (<div key={ticket.id}> {ticket.id} </div>)}\n    </Noticeboard>\n    `\n});\n\nexamples.push({\n  name: 'Noticeboard - No Tickets',\n  demo: (subdomain, auth) => {\n    return (\n      <Noticeboard limit={0} subdomain={subdomain} auth={auth} />\n    );\n  },\n  source: `\n    <Noticeboard limit={0} subdomain=\"...\" auth={...} />\n    `\n});\n\nconst CustomNoTickets = () => {\n  return (\n    <div className=\"empty-ticket\" style={({border: \"1px solid black\"})}>\n      <h2>No tickets available</h2>\n      <p>Please check back tomorrow for more details.</p>\n    </div>\n  );\n}\n\nexamples.push({\n    name: 'Noticeboard - Custom Empty Ticket Component',\n    demo: (subdomain, auth) => {\n      return (\n        <Noticeboard limit={0} noTickets={CustomNoTickets} subdomain={subdomain} auth={auth} />\n      );\n    },\n    source: `\n      const CustomNoTickets = () => {\n        return (\n          <div className=\"empty-ticket\" style={({border: \"1px solid black\"})}>\n            <h2>No tickets available</h2>\n            <p>Please check back tomorrow for more details.</p>\n          </div>\n        );\n      }\n      \n      /* ... */\n      \n      <Noticeboard subdomain=\"...\" auth={...} limit={0} noTickets={CustomNoTickets} />\n    `\n});\n\nconst Documentation = ({auth, subdomain}) => {\n  return (\n    <DocumentComponent\n      name=\"Noticeboard\"\n      components={components}\n      examples={examples}\n      auth={auth}\n      subdomain={subdomain}\n      >\n      <p>Noticeboard is a component that displays technical tasks assigned by the UCI School of Education\n          by calling Freshdesk's APIs. Noticeboard is highly customizable, which users can specify the number\n          of tickets, the order types, etc.\n      </p>\n      <p>A Noticeboard ticket (aka. question/issue in forums) contains the following: </p>\n        <dl>\n            <dt><pre>id</pre></dt>\n            <dd>- each ticket has its unique id (not displayed in standard view)</dd>\n            <dt><pre>requester.name</pre></dt>\n            <dd>- the person who asks for help</dd>\n            <dt><pre>created_at</pre></dt>\n            <dd>- the time (in PST) that a ticket is submitted</dd>\n            <dt><pre>subject</pre></dt>\n            <dd>- the title of the ticket</dd>\n            <dt><pre>description_text</pre></dt>\n            <dd>- snapshot of the first ~250 characters of ticket description</dd>\n            <dt><pre>tags</pre></dt>\n            <dd>- tag technical assistants who will help with the ticket issue</dd>\n            <dt><pre>status</pre></dt>\n            <dd>- status of a ticket: open, pending, resolved, closed</dd>\n            <dt><pre>priority</pre></dt>\n            <dd>- importance of tickets: low, medium, high</dd>\n        </dl>\n      <p>It is not required to get all specified fields above at once when calling the Noticeboard\n          component. Users may choose to only retrieve parts (e.g. ticket id) of tickets. See examples below.\n      </p>\n      <hr />\n      <p>Note: This site presents a mockup of Freshdesk API calls due to confidentiality reasons. If you would\n        like to see the real Freshdesk tickets, please enter your Freshdesk subdomain, username, and password at the\n        homepage.</p>\n    </DocumentComponent>\n  );\n};\n\nexport default Documentation;\n","import React from 'react';\nimport LayoutContent from './layout/Content';\n\nimport NoticeboardDocs from './components/NoticeboardDocs';\n\nconst Documentation = () => {\n  return (\n    <div>\n      <LayoutContent>\n        {/* <HelloWorldDocs /> */}\n        <NoticeboardDocs />\n      </LayoutContent>\n    </div>\n  );\n}\n\nexport default Documentation;\n","import React, {Component} from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LayoutNav from './layout/Nav';\nimport LayoutFooter from './layout/Footer';\nimport Home from './Home';\nimport Documentation from './Documentation';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './prism.css';\nimport './index.css';\n\nimport axios from 'axios';\nimport MockTickets, {initMock} from '../test-data/mock-tickets';\nconst mockCtrl = initMock(axios);\n\nconst title = 'Noticeboard Freshdesk';\nconst gh = 'uci-soe/notice-board-freshdesk';\n// if using a root url, remove the basename value here and in BrowserRouter\nconst basename = process.env.REACT_APP_GH_PAGES_PATH ?\n  `/${process.env.REACT_APP_GH_PAGES_PATH}` : '';\n\nclass Docs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      auth: {},\n      subdomain: \"ucieducation\",\n      authenticate: (username, password, subdomain) => {\n        mockCtrl.reset();\n        this.setState({\n          auth: {username, password},\n          subdomain\n        });\n      },\n      reset: () => {\n        mockCtrl.mock();\n        this.setState({\n          auth: {username: null, password: null},\n          subdomain: \"ucieducation\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return (\n      <MockTickets.Provider value={this.state}>\n        <BrowserRouter basename={basename}>\n          <div className=\"App\">\n            <LayoutNav title={title} gh={gh} />\n            {/* Begin Routes */}\n            <Switch>\n                <Route exact path=\"/\" render={() => <Home title={title} gh={gh} />} />\n                <Route path=\"/documentation\" component={Documentation} />\n            </Switch>\n            {/* End Routes */}\n            <LayoutFooter gh={gh} />\n          </div>\n        </BrowserRouter>\n      </MockTickets.Provider>\n    );\n  }\n};\n\nexport default Docs;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Docs from './docs';\n\nReactDOM.render(\n  <Docs />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}